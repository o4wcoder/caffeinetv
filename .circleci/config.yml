version: 2

working_directory: &working_directory ~/repo

defaults: &defaults
  working_directory: *working_directory
  docker:
    - image: circleci/android:api-28-node
  environment:
    JAVA_TOOL_OPTIONS: "-Xmx1024m"
    GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false'
    TERM: dumb

jobs:
  unit-tests:
    <<: *defaults
    steps:
      - run:
          name: Install Git LFS
          command: |
              sudo apt-get install software-properties-common
              sudo add-apt-repository -y ppa:git-core/ppa
              curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
              sudo apt-get install git-lfs
              git lfs install
      - checkout
      - run:
          name: Git LFS pull
          command: git lfs pull
      - restore_cache:
          key: jar-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Download dependencies
          command: ./gradlew :app:downloadDependencies
      - run:
          name: Clean up before saving caches
          command: |
              rm -f ~/.gradle/caches/modules-2/modules-2.lock
              rm -rf ~/.gradle/caches/*/plugin-resolution
      - save_cache:
          paths:
              - ~/.gradle/caches/
              - ~/.android/build-cache
              - ~/.git/lfs
          key: jar-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - save_cache:
          paths:
              - ~/.gradle/wrapper/
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Detekt
          command: ./gradlew detekt || true
      - run:
          name: Run Unit Tests
          command: ./gradlew testProdDebugUnitTest -PdisablePreDex --stacktrace
      - persist_to_workspace:
          root: *working_directory
          paths:
            - .
      - run:
          name: Save test and detekt results
          command: |
              mkdir -p ~/reports/{xml,tests,lint,coverage}
              cp -r app/build/test-results/ ~/reports/xml
              cp -r app/build/reports/tests/testProdDebugUnitTest/ ~/reports/tests
              cp build/reports/detekt/detekt.html ~/reports/lint/detekt.html
      - store_test_results:
          path: ~/reports/xml
      - store_artifacts:
          path: ~/reports

  test-coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: *working_directory
      - run:
          name: Detekt
          command: ./gradlew detekt || true
      - run:
          name: Check Test Coverage
          command: ./gradlew testProdDebugUnitTestCoverage -PdisablePreDex --stacktrace
      - run:
          name: Save test coverage and detekt results
          command: |
              mkdir -p ~/reports/{xml,tests,lint,coverage}
              cp -r app/build/reports/jacoco/testProdDebugUnitTestCoverage/html/ ~/reports/coverage
              cp build/reports/detekt/detekt.html ~/reports/lint/detekt.html
      - store_artifacts:
          path: ~/reports

  danger:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v2-yarn-{{ checksum "yarn.lock" }}
      - run:
          name: Install Yarn Dependencies
          command: yarn ci:skip-native-if-possible || yarn install --ignore-engines
      - save_cache:
          key: v2-yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Danger
          command: yarn danger ci

workflows:
  version: 2
  android:
    jobs:
      - danger
      - unit-tests
      - test-coverage:
          requires:
            - unit-tests

