apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "tv.caffeine.app"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 62
        versionName "0.12 ($versionCode)"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    flavorDimensions "environment"
    productFlavors {
        prod {
            dimension "environment"
            applicationIdSuffix ""
            versionNameSuffix ""
        }
        staging {
            dimension "environment"
            applicationIdSuffix ".staging"
            versionNameSuffix " (staging)"
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

androidExtensions {
    experimental = true
}

ext {
    daggerVersion = '2.20'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Jetpack
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.fragment:fragment-ktx:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    // Preferences
    implementation 'androidx.preference:preference:1.0.0'

    // Layout
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Image Loading
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'

    // Date/Time
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'

    // Navigation
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha11'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0-alpha11'

    // Data binding
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    kapt "com.android.databinding:compiler:$android_plugin_version"

    // Retrofit, okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    // Dagger
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.3.2'
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:0.3.2"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.0'
    debugImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.1.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Push notifications
    implementation 'com.google.firebase:firebase-messaging:17.3.4'

    // Crash Reporting, Performance
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-perf:16.2.3'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    // In-App Purchases
    debugImplementation('com.pixiteapps.billingx:billingx:0.8.0') {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
    }
    releaseImplementation 'com.android.billingclient:billing:1.2'

    // Legal, etc.
    implementation 'com.google.android.gms:play-services-oss-licenses:16.0.2'

    // Social
    implementation 'com.facebook.android:facebook-android-sdk:4.39.0'

    // recaptcha
    implementation 'com.google.android.gms:play-services-safetynet:16.0.0'

    // Kochava
    stagingImplementation 'com.kochava.base:tracker:3.5.0'

    // ThreatMetrix
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-codec:commons-codec:1.11'
    implementation fileTree(dir: 'libs', include: ['TrustDefender-5.3-91.aar'])

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'io.mockk:mockk:1.9'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    androidTestImplementation 'io.mockk:mockk-android:1.9'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    implementation project(':libwebrtc')
}

apply plugin: 'com.google.gms.google-services'
