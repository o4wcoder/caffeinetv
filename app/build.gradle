plugins {
    id('com.android.application')
    id('com.github.triplet.play') version "2.2.0"
    id('kotlin-android')
    id('androidx.navigation.safeargs.kotlin')
    id('kotlin-android-extensions')
    id('kotlin-kapt')
    id('io.fabric')
    id('com.google.android.gms.oss-licenses-plugin')
    id('com.getkeepsafe.dexcount')
    id('com.google.firebase.firebase-perf')
    id('com.apollographql.android')
}
apply from: 'jacoco.gradle'
apply from: 'version.gradle'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "tv.caffeine.app"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        playStoreBundleUpload {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.playStoreBundleUpload
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        kotlinOptions.jvmTarget = "1.8"
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

play {
    defaultToAppBundles = true
    track = "internal"
    serviceAccountCredentials = file("caffeine-ci-build-publisher.json")
    resolutionStrategy = "auto"
    outputProcessor {
        versionNameOverride = "$versionNameOverride ($versionCode)"
    }
}

androidExtensions {
    experimental = true
}

apollo {
    generateKotlinModels = true
}

task downloadDependencies() {
    description 'Download all dependencies to the Gradle cache'
    doLast {
        configurations.findAll { it.canBeResolved }.files
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"

    // WebRTC
    implementation project(':libwebrtc')

    // Jetpack
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.androidx_core}"
    implementation "androidx.fragment:fragment:${versions.fragments}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragments}"

    // Design
    implementation 'com.google.android.material:material:1.0.0'

    // Preferences
    implementation 'androidx.preference:preference:1.0.0'

    // Layout
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Image Loading
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'

    // Date/Time
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime:${versions.lifecycle}"

    // Data binding
    kapt "androidx.databinding:databinding-compiler:${versions.android_plugin}"

    // Retrofit, okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.0'

    // Dagger
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.3.3'
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:0.3.3"
    kaptTest "com.google.dagger:dagger-compiler:${versions.dagger}"
    kaptTest "com.google.dagger:dagger-android-processor:${versions.dagger}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    debugImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-debug:${versions.coroutines}"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Push notifications
    implementation 'com.google.firebase:firebase-messaging:20.0.0'

    // Crash Reporting, Performance
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation 'com.google.firebase:firebase-perf:19.0.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // In-App Purchases
    debugImplementation('com.pixiteapps.billingx:billingx:0.8.2') {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
    }
    releaseImplementation 'com.android.billingclient:billing:1.2'

    // GraphQL
    implementation 'com.apollographql.apollo:apollo-runtime:1.0.1'
    implementation 'com.apollographql.apollo:apollo-coroutines-support:1.0.1'
    compileOnly 'org.jetbrains:annotations:16.0.1'
    testCompileOnly 'org.jetbrains:annotations:16.0.1'

    // Legal, etc.
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Social
    implementation 'com.facebook.android:facebook-android-sdk:5.8.0'

    // recaptcha
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'

    // Kochava
    implementation 'com.kochava.base:tracker:3.6.1'

    // ThreatMetrix
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-codec:commons-codec:1.12'
    implementation fileTree(dir: 'libs', include: ['TrustDefender-5.3-91.aar'])

    // Security
    implementation "androidx.security:security-crypto:${versions.security}"

    // Shake detector for dev options
    implementation 'com.squareup:seismic:1.0.2'

    // Process Phoenix for dev options
    implementation 'com.jakewharton:process-phoenix:2.0.0'

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    testImplementation "org.robolectric:robolectric:${versions.robolectric}"
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.test:monitor:1.2.0'
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'androidx.test:rules:1.2.0'
    debugImplementation("androidx.fragment:fragment-testing:${versions.fragments}") {
        exclude group: "androidx.test", module: "core"
    }
    testImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    testImplementation "androidx.test.espresso:espresso-intents:${versions.espresso}"
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    androidTestImplementation 'io.mockk:mockk-android:1.9.3'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${versions.espresso}"
}

apply plugin: 'com.google.gms.google-services'
